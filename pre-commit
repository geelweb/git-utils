#!/bin/bash
#
# Git pre-commit hook to check syntax and coding standard respects of php, js,
# perl, python and bach files.
#
# license: MIT
# author: Guillaume Luchet <guillaume@geelweb.org>

# finds files to checks
git_diff='git diff --cached --name-only --diff-filter="A|M"'

php_files=$($git_diff | egrep \.php$)
js_files=$($git_diff | egrep \.js$)
perl_files=$(echo $files | egrep '\.pl|pm$')
python_files=$($git_diff | egrep \.py$)
bash_files=$($git_diff | egrep \.sh$)

# Use pylint disabling messages about max line length
pylint="pylint --disable=C0301"

# Uncomment the next line if your project is a django project
# TODO try to detect the project is a django project
#pylint="django-lint"

if [ "$php_files" != "" ]; then
    # check syntax on php files
    output=$(echo $php_files | xargs -n1 php -l)
    [ $? -gt 0 ] && echo "PHP Syntax checks failed (php -l)" >&2 && exit 1

    # check coding standards on php files
    output=$(echo $php_files | xargs phpcs --standard=ZEND)
    [ $? -gt 0 ] && echo "PHP Coding Standards checks failed (phpcs --standard=ZEND)" >&2 && exit 1
fi

if [ "$js_files" != "" ]; then
    # check coding standards on js files
    output=$(echo $js_files | xargs jslint)
    [ $? -gt 0 ] && echo "Javascript Coding Sstandards checks failed (jslint)" >&2 && exit 1
fi

if [ "$perl_files" != "" ]; then
    # check syntax on perl files
    output=$(echo $perl_files | xargs -n1 perl -c)
    [ $? -gt 0 ] && echo "Perl scripts compilation failed (perl -c)" >&2 && exit 1
fi

if [ "$python_files" != "" ]; then
    # check syntax on python files
    output=$(echo $python_files | xargs $pylint)
    [ $? -gt 0 ] && echo "Python Coding Standards checks failed ($pylint)" >&2 && exit 1
fi

if [ "$bash_files" != "" ]; then
    # Chech syntax on bash files
    output=$(echo $bash_files | xargs -n1 bash -n)
    [ $? -gt 0 ] && echo "Syntax error found in bash files (bash -n)" >&2 && exit 1

    # Chech bashisms on bash files
    output=$(echo $bash_files | xargs checkbashisms -f)
    [ $? -gt 0 ] && echo "Errors found on bash scripts (checkbashism -f)" >&2 && exit 1
fi

